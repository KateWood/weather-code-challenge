{"version":3,"sources":["components/Header/sun.png","components/PackingList/mittens.png","components/PackingList/rainboots.png","components/PackingList/shorts.png","components/PackingList/snowboots.png","components/PackingList/sunglasses.png","components/PackingList/sweater.png","components/PackingList/tShirt.png","components/PackingList/umbrella.png","components/Form/Form.js","components/Header/Header.js","components/PackingList/PackingList.js","components/Recommendation/Recommendation.js","components/Tile/Tile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","city","isError","onChange","onSubmit","htmlFor","type","className","placeholder","id","value","event","target","Header","src","logo","alt","PackingList","forecast","images","items","clothing","map","date","temp","Math","round","max","min","push","mittens","sweater","tShirt","shorts","weather","icon","sunglasses","umbrella","rainboots","snowboots","Array","from","Set","image","key","Object","entries","item","Recommendation","extra","desc","high","low","Tile","pop","Date","toLocaleDateString","parseFloat","toFixed","App","useState","setCity","setIsError","destination","setDestination","setForecast","isInitialMount","useRef","useEffect","current","fetch","method","then","res","json","response","lat","coord","lon","daily","slice","catch","error","console","log","newCity","preventDefault","toLowerCase","split","word","charAt","toUpperCase","join","dt","description","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,sQCsB5BC,MAnBf,YAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACvC,OACE,0BAAMA,SAAUA,GACd,2BAAOC,QAAQ,QAAf,+BAGA,2BACEC,KAAK,OACLC,UAAWL,EAAU,UAAY,GACjCM,YAAaN,EAAU,wBAA0B,GACjDO,GAAG,OACHC,MAAOR,EAAU,GAAKD,EACtBE,SAAU,SAAAQ,GAAK,OAAIR,EAASQ,EAAMC,OAAOF,UAE3C,2BAAOJ,KAAK,SAASI,MAAM,a,sBCFlBG,MAXf,WACE,OACE,4BAAQN,UAAU,UAChB,6BACE,yBAAKO,IAAKC,IAAMR,UAAU,OAAOS,IAAI,SACrC,kD,2ICiFOC,MA7Ef,YAAoC,IAAbC,EAAY,EAAZA,SACjBC,EAAS,GACTC,EAAQ,GACNC,EAAW,CACf,8BAA+B,EAC/B,qBAAsB,EACtB,sBAAuB,EACvB,gBAAiB,GAkDnB,OA/CAH,EAASI,KAAI,SAAAC,GACX,IAAMC,EAAOC,KAAKC,OAAOH,EAAKC,KAAKG,IAAMJ,EAAKC,KAAKI,KAAK,GAgBxD,OAdIJ,EAAO,IACTL,EAAOU,KAAKC,KACZT,EAAS,kBAAoB,GACpBG,EAAO,IAChBL,EAAOU,KAAKE,KACZV,EAAS,gCAAkC,GAClCG,EAAO,IAChBL,EAAOU,KAAKG,KACZX,EAAS,uBAAyB,IAElCF,EAAOU,KAAKI,KACZZ,EAAS,wBAA0B,GAG7BE,EAAKW,QAAQ,GAAGC,MACtB,IAAK,KACL,IAAK,KACHhB,EAAOU,KAAKO,KACZhB,EAAMS,KAAK,cACX,MACF,IAAK,KACL,IAAK,MACL,IAAK,MACHV,EAAOU,KAAKQ,KACZlB,EAAOU,KAAKS,KACZlB,EAAMS,KAAK,YACXT,EAAMS,KAAK,cACX,MACF,IAAK,MACHV,EAAOU,KAAKU,KACZnB,EAAMS,KAAK,cACX,MACF,QACE,OAAO,KAIX,OAAO,QAITV,EAASqB,MAAMC,KAAK,IAAIC,IAAIvB,IAC5BC,EAAQoB,MAAMC,KAAK,IAAIC,IAAItB,IAGzB,6BACGD,EAAOG,KAAI,SAAAqB,GAAK,OACf,yBAAK7B,IAAK6B,EAAO3B,IAAK2B,EAAOC,IAAKD,EAAOpC,UAAU,qBAErD,6CACA,4BACGsC,OAAOC,QAAQzB,GAAUC,KAAI,YAAmB,IAAD,mBAAhBsB,EAAgB,KAAXlC,EAAW,KAC9C,OAAc,IAAVA,EAAoB,KACV,IAAVA,EAAoB,wBAAIkC,IAAKA,GAAMA,EAAf,QAAyBlC,EAAzB,QACjB,wBAAIkC,IAAKA,GAAMA,EAAf,QAAyBlC,EAAzB,YAERU,EAAME,KAAI,SAAAyB,GACT,OAAO,wBAAIH,IAAKG,GAAOA,S,MC9BlBC,MAlDf,YAKI,IACEC,EACA5B,EANJ6B,EAIC,EAJDA,KACAC,EAGC,EAHDA,KACAhB,EAEC,EAFDA,KACAiB,EACC,EADDA,IAIM5B,EAAOC,KAAKC,OAAOyB,EAAOC,GAAK,GAGrC,OAAQjB,GACN,IAAK,KACL,IAAK,KACHc,EAAQ,2BACR,MACF,IAAK,KACL,IAAK,MACL,IAAK,MACHA,EAAQ,6BACR,MACF,IAAK,MACHA,EAAQ,aACR,MACF,QACEA,EAAQ,KAcZ,OATE5B,EADEG,EAAO,GACE,+CACFA,EAAO,GACL,kFACFA,EAAO,GACL,iDAEA,8CAIX,uBAAGjB,UAAU,kBAAb,cACc2C,EACXD,GACC,4CAAkBA,GAHtB,KAKK5B,I,MC1BMgC,MAnBf,YAOI,IANF9B,EAMC,EANDA,KACA2B,EAKC,EALDA,KACAC,EAIC,EAJDA,KACAhB,EAGC,EAHDA,KACAiB,EAEC,EAFDA,IACAE,EACC,EADDA,IAEMxC,EAAG,2CAAuCqB,EAAvC,WACT,OACE,yBAAK5B,UAAU,QACb,4BAAK,IAAIgD,KAAY,IAAPhC,GAAaiC,mBAAmB,UAC9C,yBAAK1C,IAAKA,EAAKE,IAAKkC,IACpB,2BAAIzB,KAAKC,MAAM0B,GAAf,WAA0B3B,KAAKC,MAAMyB,GAArC,SACA,2BAAIM,WAAe,IAAJH,GAASI,QAAQ,GAAG,IAAnC,qBCuGSC,MAzGf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACN3D,EADM,KACA4D,EADA,OAEiBD,mBAAS,IAF1B,mBAEN1D,EAFM,KAEG4D,EAFH,OAGyBF,mBAAS,IAHlC,mBAGNG,EAHM,KAGOC,EAHP,OAImBJ,mBAAS,MAJ5B,mBAIN1C,EAJM,KAII+C,EAJJ,KAmBPC,EAAiBC,kBAAO,GA4C9B,OA1CAC,qBAAU,WACJF,EAAeG,QAClBH,EAAeG,SAAU,EAGxBC,MAAM,sDAAD,OACmDrE,EADnD,2CAEH,CACEsE,OAAQ,QAGTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAMD,EAAS1E,KAAK4E,MAAMD,IAC1BE,EAAMH,EAAS1E,KAAK4E,MAAMC,IAE9B,OAAOR,MAAM,uDAAD,OAC6CM,EAD7C,gBACwDE,EADxD,0FAEV,CACEP,OAAQ,QAGTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAYU,EAASI,MAAMC,MAAM,EAAE,IACnCnB,EAAQ,OAEToB,OAAM,SAAAC,GACLjB,EAAY,MACZH,GAAW,GACXqB,QAAQC,IAAIF,SAGjBD,OAAM,SAAAC,GACLjB,EAAY,MACZH,GAAW,GACXqB,QAAQC,IAAIF,QAIjB,CAACnB,IAGF,yBAAKxD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,SA9De,SAAAkF,GACnBvB,GAAW,GACXD,EAAQwB,IA6DJjF,SAzDe,SAAAO,GACnBA,EAAM2E,iBACNtB,EAAe/D,MAyDZiB,GACC,kBAAC,WAAD,KAEE,qCAAW6C,EAAYwB,cAAcC,MAAM,KAAKlE,KAAI,SAAAmE,GAAI,OAAKA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKT,MAAM,MAAKY,KAAK,KAAjH,KACA,yBAAKrF,UAAU,kBACZW,EAASI,KAAI,SAAAC,GAAI,OAChB,yBAAKhB,UAAU,MAAMqC,IAAKrB,EAAKsE,IAC7B,kBAAC,EAAD,CACEtE,KAAMA,EAAKsE,GACX3C,KAAM3B,EAAKW,QAAQ,GAAG4D,YACtB3C,KAAM5B,EAAKC,KAAKG,IAChBQ,KAAMZ,EAAKW,QAAQ,GAAGC,KACtBiB,IAAK7B,EAAKC,KAAKI,IAEf0B,IAAK/B,EAAK+B,MAEZ,kBAAC,EAAD,CACEJ,KAAM3B,EAAKW,QAAQ,GAAG4D,YACtB3C,KAAM5B,EAAKC,KAAKG,IAChBQ,KAAMZ,EAAKW,QAAQ,GAAGC,KACtBiB,IAAK7B,EAAKC,KAAKI,WAKvB,kBAAC,EAAD,CAAaV,SAAUA,IACvB,qDCrGU6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEd5B,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM4B,c","file":"static/js/main.6a20257b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.645c9b49.png\";","module.exports = __webpack_public_path__ + \"static/media/mittens.91f71289.png\";","module.exports = __webpack_public_path__ + \"static/media/rainboots.fd86796a.png\";","module.exports = __webpack_public_path__ + \"static/media/shorts.5eb45616.png\";","module.exports = __webpack_public_path__ + \"static/media/snowboots.3e0537af.png\";","module.exports = __webpack_public_path__ + \"static/media/sunglasses.84cd38d8.png\";","module.exports = __webpack_public_path__ + \"static/media/sweater.df50de3a.png\";","module.exports = __webpack_public_path__ + \"static/media/tShirt.c75aef2e.png\";","module.exports = __webpack_public_path__ + \"static/media/umbrella.7c80b1b1.png\";","import React from 'react';\nimport './Form.scss';\n\nfunction Form({ city, isError, onChange, onSubmit }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"city\">\n        What city are you visiting?\n      </label>\n      <input\n        type=\"text\"\n        className={isError ? 'isError' : ''}\n        placeholder={isError ? 'enter valid city name' : ''}\n        id=\"city\"\n        value={isError ? '' : city}\n        onChange={event => onChange(event.target.value)}\n      />\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport logo from './sun.png';\nimport './Header.scss';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div>\n        <img src={logo} className=\"logo\" alt=\"logo\" />\n        <h1>Packing Planner</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './PackingList.scss';\n\n// images\nimport mittens from './mittens.png';\nimport rainboots from './rainboots.png';\nimport shorts from './shorts.png';\nimport snowboots from './snowboots.png';\nimport sunglasses from './sunglasses.png';\nimport sweater from './sweater.png';\nimport tShirt from './tShirt.png';\nimport umbrella from './umbrella.png';\n\nfunction PackingList({ forecast }) {\n  let images = [];\n  let items = [];\n  const clothing = {\n    'long sleeves and long pants': 0,\n    't-shirt and shorts': 0,\n    'tank top and shorts': 0,\n    'warm clothing': 0,\n  };\n\n  forecast.map(date => {\n    const temp = Math.round((date.temp.max + date.temp.min)/2);\n\n    if (temp < 55){\n      images.push(mittens);\n      clothing['warm clothing'] += 1;\n    } else if (temp < 65) {\n      images.push(sweater);\n      clothing['long sleeves and long pants'] += 1;\n    } else if (temp < 80) {\n      images.push(tShirt);\n      clothing['t-shirt and shorts'] += 1;\n    } else {\n      images.push(shorts);\n      clothing['tank top and shorts'] += 1;\n    }\n\n    switch (date.weather[0].icon) {\n      case '1d':\n      case '2d':\n        images.push(sunglasses);\n        items.push('sunglasses');\n        break;\n      case '9d':\n      case '10d':\n      case '11d':\n        images.push(umbrella);\n        images.push(rainboots);\n        items.push('umbrella');\n        items.push('rain boots');\n        break;\n      case '13d':\n        images.push(snowboots);\n        items.push('snow boots');\n        break;\n      default:\n        return null;\n    }\n\n    // console warning - expects return\n    return null;\n  });\n\n  // remove duplicates\n  images = Array.from(new Set(images));\n  items = Array.from(new Set(items));\n\n  return (\n    <div>\n      {images.map(image => (\n        <img src={image} alt={image} key={image} className=\"packingImages\" />\n      ))}\n      <h4>Packing List:</h4>\n      <ul>\n        {Object.entries(clothing).map(([key, value]) => {\n          if (value === 0) return null;\n          if (value === 1) return <li key={key}>{key} for {value} day</li>;\n          return <li key={key}>{key} for {value} days</li>;\n        })}\n        {items.map(item => {\n          return <li key={item}>{item}</li>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default PackingList;\n","import React from 'react';\nimport './Recommendation.scss';\n\nfunction Recommendation({\n  desc,\n  high,\n  icon,\n  low,\n}) {\n  let extra,\n      clothing;\n  const temp = Math.round((high + low)/2);\n\n  // determine whether an extra item is needed\n  switch (icon) {\n    case '1d':\n    case '2d':\n      extra = 'sunglasses and sunscreen';\n      break;\n    case '9d':\n    case '10d':\n    case '11d':\n      extra = 'an umbrella and rain boots';\n      break;\n    case '13d':\n      extra = 'snow boots';\n      break;\n    default:\n      extra = null;\n  }\n\n  // determine what clothes to pack based on daily temp\n  if (temp < 55){\n    clothing = \"Pack warm clothing, because it will be cold!\";\n  } else if (temp < 65) {\n    clothing = \"It will be a little chilly, but not too cold. Pack long sleeves and long pants.\";\n  } else if (temp < 80) {\n    clothing = \"A t-shirt and shorts should be good for today.\";\n  } else {\n    clothing = \"It will be HOT! Pack a tank top and shorts.\";\n  }\n\n  return (\n    <p className=\"recommendation\">\n      Looks like {desc}\n      {extra && (\n        <span>, so bring {extra}</span>\n      )}\n      . {clothing}\n    </p>\n  );\n}\n\nexport default Recommendation;\n","import React from 'react';\nimport './Tile.scss';\n\nfunction Tile({\n  date,\n  desc,\n  high,\n  icon,\n  low,\n  pop,\n}) {\n  const src = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n  return (\n    <div className=\"tile\">\n      <h4>{new Date(date * 1000).toLocaleDateString(\"en-US\")}</h4>\n      <img src={src} alt={desc}/>\n      <p>{Math.round(low)}°F - {Math.round(high)}°F</p>\n      <p>{parseFloat(pop*100).toFixed(0)+\"%\"} chance of rain</p>\n    </div>\n  );\n}\n\nexport default Tile;\n","import React, { \n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport './App.scss';\n\nimport Form from './components/Form/Form';\nimport Header from './components/Header/Header';\nimport PackingList from './components/PackingList/PackingList';\nimport Recommendation from './components/Recommendation/Recommendation';\nimport Tile from './components/Tile/Tile';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [isError, setIsError] = useState('');\n  const [destination, setDestination] = useState('');\n  const [forecast, setForecast] = useState(null);\n\n  // update city as it is typed\n  const handleChange = newCity => {\n    setIsError(false);\n    setCity(newCity);\n  }\n\n  // trigger useEffect by updating search on form submit\n  const handleSubmit = event => {\n    event.preventDefault();\n    setDestination(city);\n  }\n\n  // prevent useEffect on initial page load\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n     isInitialMount.current = false;\n    } else {\n      // use the city name to get the coordinates\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=ef04c3abf4ce54cd1d370241f0074e94`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then(res => res.json())\n        .then(response => {\n          let lat = response.city.coord.lat;\n          let lon = response.city.coord.lon;\n          // use the coordinates to get the daily forecast\n          return fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&exclude=current,minutely,hourly&appid=ef04c3abf4ce54cd1d370241f0074e94`,\n            {\n              method: \"GET\",\n            }\n          )\n            .then(res => res.json())\n            .then(response => {\n              setForecast(response.daily.slice(1,6));\n              setCity('');\n            })\n            .catch(error => {\n              setForecast(null);\n              setIsError(true);\n              console.log(error);\n            });\n        })\n        .catch(error => {\n          setForecast(null);\n          setIsError(true);\n          console.log(error);\n        });\n    }\n  // eslint-disable-next-line\n  }, [destination]);\n\n  return (\n    <div className=\"app\">\n      <Header/>\n      <Form\n        city={city}\n        isError={isError}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      {forecast && (\n        <Fragment>\n          {/* title case destination */}\n          <h1>Enjoy {destination.toLowerCase().split(' ').map(word => (word.charAt(0).toUpperCase() + word.slice(1))).join(' ')}!</h1>\n          <div className=\"tile-container\">\n            {forecast.map(date => (\n              <div className=\"day\" key={date.dt}>\n                <Tile\n                  date={date.dt}\n                  desc={date.weather[0].description}\n                  high={date.temp.max}\n                  icon={date.weather[0].icon}\n                  low={date.temp.min}\n                  // pop = probability of precipitation\n                  pop={date.pop}\n                />\n                <Recommendation\n                  desc={date.weather[0].description}\n                  high={date.temp.max}\n                  icon={date.weather[0].icon}\n                  low={date.temp.min}\n                />\n              </div>\n            ))}\n          </div>\n          <PackingList forecast={forecast} />\n          <h1>Have a great trip!</h1>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}